#BlueJ class context
comment0.params=anchoLienzo\ altoLienzo
comment0.target=Snake(int,\ int)
comment0.text=\r\n\ Constructor\ de\ la\ clase\ Snake\r\n
comment1.params=lienzo
comment1.target=void\ dibujar(Canvas)
comment1.text=\r\n\ Dibuja\ la\ serpiente\ en\ el\ lienzo\ dado\r\n
comment10.params=
comment10.target=boolean\ mover()
comment10.text=\r\n\ Adiciona\ un\ segmento\ a\ la\ serpiente\ si\ es\ posible;\ en\ caso\ contrario\ \r\n\ devuelve\ false\r\n
comment2.params=lienzo
comment2.target=void\ borrar(Canvas)
comment2.text=\r\n\ Borra\ la\ serpiente\ del\ lienzo\ dado\r\n
comment3.params=
comment3.target=boolean\ addSegment()
comment3.text=\r\n\ Adiciona\ un\ segmento\ aleatorio\ a\ la\ serpiente\r\n
comment4.params=
comment4.target=java.util.ArrayList\ getSerpiente()
comment4.text=\r\n\ Metodo\ que\ devuelve\ el\ arraylist\ de\ segmentos\ que\ componen\ la\ serpiente\r\n\ @return\ El\ arraylist\ de\ segmentos\ que\ componen\ la\ serpiente\r\n
comment5.params=segmento
comment5.target=boolean\ esSegmentoValido(Segment)
comment5.text=\r\n\ Indica\ si\ un\ segmento\ es\ valido,\ es\ decir,\ si\ se\ puede\ adicionar\r\n\ a\ la\ serpiente\ sin\ que\ colisione\ con\ otros\ segmentos\ de\ la\ serpiente\r\n\ o\ con\ los\ bordes\ del\ lienzo\r\n
comment6.params=segmento
comment6.target=boolean\ colisionaConBordes(Segment)
comment6.text=\r\n\ Indica\ si\ el\ segmento\ dado\ colisiona\ con\ los\ bordes\ del\ lienzo\r\n
comment7.params=segmento
comment7.target=boolean\ colisionaConOtrosSegmentos(Segment)
comment7.text=\r\n\ Indica\ si\ el\ segmento\ colisiona\ con\ otros\ segmentos\ de\ la\ serpiente\ \r\n
comment8.params=
comment8.target=java.util.ArrayList\ getSegmentos()
comment8.text=\r\n\ Metodo\ que\ devuelve\ el\ arraylist\ de\ segmentos\ que\ componen\ la\ serpiente\r\n\ @return\ El\ arraylist\ de\ segmentos\ que\ componen\ la\ serpiente\r\n
comment9.params=
comment9.target=void\ remove()
comment9.text=\r\n\ Elimina\ el\ primer\ segmento\ de\ la\ serpiente\r\n
numComments=11
